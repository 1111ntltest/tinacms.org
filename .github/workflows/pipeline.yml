name: pipeline
'on': push
jobs:
  ui-tests-playwright:
    name: UI Tests (playwright)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project files
        uses: actions/checkout@v2
      - name: Setup nodejs and npm
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo '::set-output name=dir::$(npm config get cache)'
      - name: Check cache directory
        uses: actions/cache@v2
        id: npm-cache
        if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies and run tests
        run: npm install && npm install --save-dev playwright
      - name: Run tests
        run: npx playwright test ./tests --headed --browser=all
      - name: Save artifacts (videos, screenshots, ...)
        uses: actions/upload-artifact@v2
        with:
          name: test-artifacts
          path: test-results/
      - uses: actions/checkout@v2
      - name: New Action 1
        uses: ./.github/actions/new-action-1
        id: new-action-1
        with:
          SECRET_NAME: ${{ secrets.SECRET_NAME }}
          SECRET_NAME2: ${{ secrets.SECRET_NAME2 }}
      - name: Results - New Action 1
        run: >
          echo 'SECRET_NAME => ${{
          steps['new-action-1']['outputs']['SECRET_NAME']}}

          ,SECRET_NAME2 => ${{
          steps['new-action-1']['outputs']['SECRET_NAME2']}}
      - uses: actions/checkout@v2
      - name: New Action 13
        uses: ./.github/actions/new-action-13
        id: new-action-13
        with:
          PLACEHOLDER: ${{ secrets.PLACEHOLDER }}
      - name: Results - New Action 13
        run: >
          echo 'PLACEHOLDER => ${{
          steps['new-action-13']['outputs']['PLACEHOLDER']}}
  deployment-vercel:
    name: Deployment (Vercel)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project files
        uses: actions/checkout@v2
      - name: Setup nodejs and npm
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: echo '::set-output name=dir::$(npm config get cache)'
      - name: Check cache directory
        uses: actions/cache@v2
        id: npm-cache
        if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm install && npm install --save-dev vercel
      - name: Build project files
        run: npm run build
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: >-
          npx vercel link --token $VERCEL_TOKEN --confirm && npx vercel ./
          --confirm
      - name: Get deployment URL
        id: deployment-url
        run: 'echo ''{ "url": "$(echo $VERCEL_URL)" }'' > deployment-info.json'
      - name: Save deployment info
        uses: actions/upload-artifact@v2
        with:
          name: deployment-info
          path: ./deployment-info.json
