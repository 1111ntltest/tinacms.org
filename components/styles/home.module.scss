@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(
          #{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
            ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})
        );
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

.pageWrapper {
  --rotationTransform: rotateX(60deg) rotateY(0deg) rotateZ(-35deg);
  --elevation: 2.5em;
  --animation-length: 500ms;
  --animation-length-short: 240ms;

  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  background-repeat: repeat-x;
  margin: 0;
  overflow: hidden;

  @include fluid-type(400px, 2000px, 14px, 20px);
}

.heroWrapper {
  position: relative;
  overflow: hidden;
  width: 100%;
  min-height: 100vh;

  background: linear-gradient(-20deg, var(--color-seafoam) 40%, white 80%);

  /* Transparency */
  &:before {
    content: '';
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      170deg,
      var(--color-seafoam-dark) 0rem,
      var(--color-seafoam) 30rem,
      white 60rem
    );
    mask-image: linear-gradient(
      -20deg,
      rgba(0, 0, 0, 0) 30%,
      rgba(0, 0, 0, 1) 70%
    );
    z-index: 15;
    opacity: 0;
    pointer-events: none;
  }
}

.header {
  position: absolute;
  z-index: 50;
  padding: 2em;
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  top: 0;

  h1 {
    margin: 0;
    font-size: 1em;
    line-height: 1;
  }

  svg {
    height: 2.75em;
    width: auto;
    display: block;
    margin: -0.75em 0 0 0;
  }
}

.hero {
  display: block;
  position: relative;
  overflow: visible;
  z-index: 1;
  margin-top: -4em;
  margin-bottom: -7em;
}

.heroContent {
  position: relative;
  text-align: center;
  display: block;
  padding: 9em 4em 0 4em;
  margin: 0;
  z-index: 20;
}

.heroTitle {
  font-family: var(--font-tuner);
  font-size: 3em;
  line-height: 1.4;
  color: var(--color-primary);
  margin: 0 0 0.75em 0;
}

@keyframes heroTitleSpin {
  0% {
    transform: translate3d(-50%, -50%, 0) rotateX(630deg);
    opacity: 0;
  }
  100% {
    transform: translate3d(-50%, -50%, 0) rotateX(0deg);
  }
}

@keyframes heroTitleSpinOut {
  0% {
    transform: translate3d(-50%, -50%, 0) rotateX(0deg);
  }
  100% {
    transform: translate3d(-50%, -50%, 0) rotateX(-270deg);
    opacity: 0;
  }
}

@keyframes heroTitleSpinSideways {
  0% {
    transform: translate3d(-50%, -50%, 0) rotateY(0deg);
  }
  100% {
    transform: translate3d(-50%, -50%, 0) rotateY(450deg);
    opacity: 0;
  }
}

.heroTitleFramework {
  display: inline-block;
  width: auto;
  vertical-align: middle;
  margin: 0 0.375em;
  perspective: 300px;
  background-color: rgba(132, 181, 178, 0.1);
  box-shadow: 0 0 30px 30px rgba(132, 181, 178, 0.1);
  cursor: pointer;
  transition: margin 500ms 500ms ease-in-out;
  transition: width 800ms var(--ease-out);

  span {
    position: absolute;
    left: 50%;
    top: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem 1.5rem;
    background: white;
    border: 1px solid white;
    border-radius: 1rem;
    transform-style: preserve-3d;
    transform: translate3d(-50%, -50%, 0) rotateX(0deg);
    transition: transform var(--animation-length) var(--ease-out),
      opacity var(--animation-length) var(--ease-out);
    transform-style: preserve-3d;
  }

  svg {
    height: 1em;
    width: auto;
    display: inline-block;
    margin: 0;
  }
}

.heroTitleAnimateSideways {
  animation: heroTitleSpinSideways 1 500ms cubic-bezier(0.905, 0.005, 1, 0.51)
    both;
}

.heroTitleAnimate {
  animation: heroTitleSpin 1 1000ms cubic-bezier(0, 0.435, 0.285, 1.135) both;
}

.heroTitleAnimateOut {
  animation: heroTitleSpinOut 1 500ms cubic-bezier(0.905, 0.005, 1, 0.51) both;
}

.heroText {
  font-size: 1.5em;
  font-family: var(--font-regular);
  margin: 0 0 1.5em 0;
}

.heroButton {
  position: relative;
  display: inline-block;
  background: transparent;
  border: none;
  padding: 0.625em 1.375em;
  color: white;
  z-index: 10;
  cursor: pointer;
  font-size: 1.125em;
  border-radius: 2em;
  font-family: var(--font-tuner);

  &:hover,
  &:focus {
    &:before {
      transform: translate3d(0, 0, 0px) scale3d(1.07, 1.07, 1);
    }
  }

  &:before {
    content: '';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: var(--color-primary);
    border-radius: 2em;
    opacity: 1;
    z-index: -1;
    transition: transform var(--ease-out) 300ms;
    transform: translate3d(0, 0, 0px) scale3d(1, 1, 1);
    box-shadow: inset 0 0 0 2px rgba(0, 0, 0, 0.05);
  }
}

.grid {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-areas:
    'a c c g'
    'b d d g'
    'b e f f';
  grid-template-columns: 1fr 1fr 1fr 1fr;
  grid-template-rows: 1fr 1fr 1fr;
  grid-gap: 1em;
  transform: var(--rotationTransform);
  backface-visibility: hidden;
  transform-style: preserve-3d;
  overflow: visible;
  z-index: 10;
}

.gridLeft {
  transform: var(--rotationTransform) translate3d(calc(-100% - 1rem), 0, 0);
  z-index: 15;
}

.gridRight {
  transform: var(--rotationTransform) translate3d(calc(100% + 1rem), 0, 0);
  z-index: 5;
}

.gridItem {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 1.5em;
  background-color: white;
  backface-visibility: hidden;
  transform-style: preserve-3d;
  transform: translate3d(0, 0, 0);
  transition: transform var(--animation-length) var(--ease-out),
    opacity var(--animation-length) var(--ease-out);
  z-index: 1;
  opacity: 1;
  overflow: visible;
  transform-origin: 50% 100%;

  /* Logo */
  svg {
    position: relative;
    height: 4.5em;
    width: auto;
    opacity: 0.3;
    transition: transform var(--animation-length) var(--ease-out),
      opacity var(--animation-length) var(--ease-out);
    transform: translate3d(0, 0, 1px) scale3d(1, 1, 1);
    max-height: 50%;
    max-width: 50%;
  }

  /* Faded seafoam overlay when not active */
  span:nth-of-type(1) {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    opacity: 0.25;
    transform: translate3d(0, 0, 0) scale3d(1, 1, 1);
    transition: opacity var(--animation-length) var(--ease-out);
    background-color: var(--color-seafoam-light);
    border-radius: 2rem;
  }

  /* Hidden border for active state */
  span:nth-of-type(2) {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    opacity: 0;
    transform: translate3d(0, 0, 0px) scale3d(1, 1, 1);
    transition: opacity var(--animation-length) var(--ease-out);
    background-color: transparent;
    border: 2px solid rgba(0, 0, 0, 0.07);
    border-radius: 2rem;
  }

  &:hover {
    transform: translate3d(0, 0, calc(var(--elevation) * 0.5));
    transform-origin: center bottom;
    opacity: 1;

    /* Ice Cube Tray */
    &:after {
      transform: translate3d(0, 0, calc(var(--elevation) * -0.5));
      opacity: 0.65;
    }

    /* Drop Shadow */
    &:before {
      transform: translate3d(0, 0, calc(var(--elevation) * -0.5 + 1px));
      opacity: 0.2;
    }

    /* Logo */
    svg {
      opacity: 1;
    }

    /* Hide faded seafoam overlay */
    span:nth-of-type(1) {
      opacity: 0;
    }

    /* Show border */
    span:nth-of-type(2) {
      opacity: 1;
    }
  }

  /* Drop Shadow */
  &:before {
    content: '';
    display: block;
    position: absolute;
    left: 0px;
    top: 4em;
    width: calc(100% - 4em);
    height: calc(100% - 4em);
    border-radius: 3em;
    transform: translate3d(0, 0, -1px);
    background-color: rgba(132, 181, 178, 0.3);
    box-shadow: 0 0 4em 4em rgba(132, 181, 178, 0.3);
    z-index: -1;
    backface-visibility: hidden;
    transform-style: preserve-3d;
    transition: transform var(--animation-length) var(--ease-out),
      opacity var(--animation-length) var(--ease-out);
    opacity: 0;
  }

  /* Ice Cube Tray */
  &:after {
    content: '';
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    border-radius: 2rem;
    transform: translate3d(0, 0, -0.1px);
    box-shadow: 0 0 0 2px var(--color-shadow),
      inset -10px 10px 10px var(--color-shadow);
    z-index: -1;
    backface-visibility: hidden;
    transform-style: preserve-3d;
    transition: transform var(--animation-length) var(--ease-out),
      opacity var(--animation-length) var(--ease-out);
    opacity: 0;
    z-index: -1;
  }

  $delay: 30ms;

  .gridLeft & {
    @for $i from 1 through 7 {
      &:nth-child(#{$i}) {
        --transition-delay: #{$i * $delay};
      }
    }
  }

  @for $i from 1 through 7 {
    &:nth-child(#{$i}) {
      --transition-delay: #{7 * $delay + $i * $delay};
    }
  }

  .gridRight & {
    @for $i from 1 through 7 {
      &:nth-child(#{$i}) {
        --transition-delay: #{14 * $delay + $i * $delay};
      }
    }
  }
}

.gridItemActive {
  transition-delay: var(--transition-delay);
  transform: translate3d(0, 0, var(--elevation));
  transform-origin: center bottom;
  opacity: 1;

  /* Ice Cube Tray */
  &:after {
    transition-delay: var(--transition-delay);
    transform: translate3d(0, 0, calc(var(--elevation) * -1));
    opacity: 0.65;
  }

  /* Drop Shadow */
  &:before {
    transition-delay: var(--transition-delay);
    transform: translate3d(0, 0, calc(var(--elevation) * -1 + 1px));
    opacity: 0.2;
  }

  /* Logo */
  svg {
    transition-delay: var(--transition-delay);
    opacity: 1;
  }

  /* Hide faded seafoam overlay */
  span:nth-of-type(1) {
    transition-delay: var(--transition-delay);
    opacity: 0;
  }

  /* Show border */
  span:nth-of-type(2) {
    transition-delay: var(--transition-delay);
    opacity: 1;
  }
}

.bigLogo {
  svg {
    height: 6em;
    width: auto;
  }
}

.gridItem1 {
  grid-area: a;
}

.gridItem2 {
  grid-area: b;
}

.gridItem3 {
  grid-area: c;
}

.gridItem4 {
  grid-area: d;
}

.gridItem5 {
  grid-area: e;
}

.gridItem6 {
  grid-area: f;
}

.gridItem7 {
  grid-area: g;
}

.wrapper {
  position: relative;
  width: 100%;
  max-width: 60em;
  margin: 0px auto;
  padding: 0px 2rem;
  display: flex;
  align-items: center;
  overflow: visible;
}

.aspectRatio {
  position: relative;
  display: block;
  width: 100%;
  height: 0;
  padding-top: 70%;
  overflow: visible;
}

.heroFeatures {
  position: relative;
  display: block;
  width: 100%;
  z-index: 20;
}

.heroFeaturesContainer {
  width: 100%;
  max-width: 2000px;
  margin: 0 auto 10em auto;
  padding: 0 2rem;
  display: grid;
  grid-template-rows: 1fr 1fr 1fr;
  grid-gap: 2rem;

  @media screen and (min-width: 1000px) {
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: auto;
  }
}

.heroFeatureCard {
  padding: 2em 2.5em;
  border-radius: 1em;
  transform-style: preserve-3d;
  transform: translate3d(0, 0, 0) rotateX(0deg);
  transform-style: preserve-3d;
  background: white;
  box-shadow: inset -2px -2px 0 6px var(--color-seafoam-light),
    0 15px 30px 30px rgba(132, 181, 178, 0.07);
  cursor: pointer;
  transition: transform var(--animation-length-short) var(--ease-out);

  &:hover {
    transform: translate3d(0, -1rem, 0);

    &:after {
      opacity: 1;
    }
  }

  &:after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    opacity: 0;
    transform: translate3d(0, 0, 0px) scale3d(1, 1, 1);
    transition: opacity var(--animation-length-short) var(--ease-out);
    background-color: transparent;
    border-radius: 1em;
    z-index: 1;
    box-shadow: inset -2px -2px 0 6px var(--color-primary);
  }

  h2 {
    position: relative;
    display: block;
    font-family: var(--font-tuner);
    color: var(--color-primary);
    font-size: 1.75em;
    line-height: 1.4;
    margin-bottom: 0.75em;
    transform-origin: 100% 0;
  }

  p {
    margin-bottom: 0.25em;
    font-size: 1.25rem;
  }
}

.whySection {
  position: relative;
  display: block;
  width: 100%;
  z-index: 30;
  margin-top: -4em;
  padding-top: 8em;

  @media screen and (min-width: 1800px) {
    padding-top: 10em;
  }
}

.whySectionContainer {
  width: 100%;
  max-width: 1800px;
  margin: 0 auto 10em auto;
  padding: 0 2rem;

  @media screen and (min-width: 700px) {
    padding: 0 8rem;
  }
}

.whySectionTitle {
  position: relative;
  display: block;
  font-family: var(--font-tuner);
  color: var(--color-secondary);
  font-size: 1.75em;
  text-align: center;
  line-height: 1.4;
  margin-bottom: 0.75em;
  transform-origin: 100% 0;
}

.whySectionBackground {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: visible;
  z-index: -1;

  svg {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: auto;
  }
}

.whyGrid {
  display: grid;
  grid-template-columns: 1fr;
  grid-gap: 5em;
  padding: 5em 0;

  @media screen and (min-width: 1300px) {
    grid-template-columns: repeat(2, 1fr);
    grid-gap: 8em;
    align-items: center;
  }
}

.whyGridReverseDesktop {
  @media screen and (min-width: 1300px) {
    > *:nth-child(2) {
      order: -1;
    }
  }
}

.whyGridContent {
  margin-top: -1em;
  h3 {
    position: relative;
    display: block;
    font-family: var(--font-tuner);
    color: var(--color-primary);
    font-size: 1.5em;
    line-height: 1.4;
    margin-bottom: 1.25em;
    transform-origin: 100% 0;
  }

  p {
    margin-bottom: 0.25em;
    font-size: 1.25rem;
  }
}

.whyGridCode {
  pre {
    /* fix wrapping issues breaking layout */
    white-space: pre-wrap !important;
    white-space: -moz-pre-wrap !important;
    white-space: -pre-wrap !important;
    white-space: -o-pre-wrap !important;
    word-wrap: break-word !important;
    code {
      white-space: pre-wrap !important;
      white-space: -moz-pre-wrap !important;
      white-space: -pre-wrap !important;
      white-space: -o-pre-wrap !important;
      word-wrap: break-word !important;
    }
  }
}

@keyframes thirdPartyIconBounce {
  0% {
    transform: translate3d(0, 0, 0);
  }
  3% {
    transform: translate3d(0, -0.75em, 0);
  }
  6% {
    transform: translate3d(0, 0.5em, 0);
  }
  9% {
    transform: translate3d(0, 0, 0);
  }
}

.thirdPartyIcon {
  position: relative;
  display: block;
  margin-bottom: 1.75em;

  span {
    position: relative;
    display: inline-block;
    width: 2.25em;
    height: 2.25em;
    margin-right: -0.75em;
    border-radius: 2em;
    background-color: var(--color-primary-dark);
    opacity: 0.15;
    transform: translate3d(0, 0, 0);
    transform-style: preserve-3d;
    transition: transform var(--animation-length-short) var(--ease-out);
    animation: thirdPartyIconBounce infinite 7000ms
      cubic-bezier(0.115, -0.08, 0.14, -0.005) both;

    &:nth-child(2) {
      opacity: 0.5;
      background-color: var(--color-primary);
      z-index: 5;
      animation-delay: 200ms;
    }

    &:nth-child(3) {
      opacity: 0.85;
      background-color: var(--color-primary);
      z-index: 10;
      animation-delay: 400ms;
    }
  }
}

@keyframes wrapComponentsIconKeyframes {
  0% {
    transform: translate3d(0, 0, 0) rotateZ(0deg);
  }
  3% {
    transform: translate3d(0.375em, 0.375em, 0) rotateZ(0deg);
  }
  6% {
    transform: translate3d(0.375em, 0.375em, 0) rotateZ(0deg);
  }
  13% {
    transform: translate3d(0.375em, 0.375em, 0) rotateZ(90deg);
  }
  16% {
    transform: translate3d(0.375em, 0.375em, 0) rotateZ(90deg);
  }
  22% {
    transform: translate3d(0, 0, 0) rotateZ(90deg);
  }
}

@keyframes wrapComponentsIconKeyframesTwo {
  0% {
    transform: translate3d(0, 0, 0) rotateZ(0deg);
  }
  3% {
    transform: translate3d(-0.375em, -0.375em, 0) rotateZ(0deg);
  }
  6% {
    transform: translate3d(-0.375em, -0.375em, 0) rotateZ(0deg);
  }
  13% {
    transform: translate3d(-0.375em, -0.375em, 0) rotateZ(90deg);
  }
  16% {
    transform: translate3d(-0.375em, -0.375em, 0) rotateZ(90deg);
  }
  22% {
    transform: translate3d(0, 0, 0) rotateZ(90deg);
  }
}

.wrapComponentsIcon {
  position: relative;
  display: block;
  margin-bottom: 1.75em;

  span {
    position: relative;
    display: inline-block;
    width: 2.25em;
    height: 2.25em;
    opacity: 0.85;
    background-color: var(--color-primary);
    z-index: 10;
    margin-bottom: 0.75em;
    transform: translate3d(0, 0, 0) rotateZ(90deg);
    animation: wrapComponentsIconKeyframes infinite 7000ms ease-in both;
    animation-delay: 2000ms;

    &:nth-child(2) {
      position: absolute;
      top: 0.75em;
      left: 0.75em;
      opacity: 0.5;
      background-color: var(--color-primary);
      z-index: 5;
      transform: translate3d(0, 0, 0) rotateZ(90deg);
      animation: wrapComponentsIconKeyframesTwo infinite 7000ms ease-in both;
      animation-delay: 2000ms;
    }
  }
}

@keyframes blockBasedEditingAnimation {
  0% {
    transform: translate3d(0, 0, 0); /* Default */
    z-index: 0;
  }
  47% {
    transform: translate3d(0, 0, 0); /* Default */
    z-index: 0;
  }
  50% {
    transform: translate3d(0.25em, -1.5em, 0); /* Apex */
    z-index: 0;
  }
  53% {
    transform: translate3d(0.75em, 0.75em, 0) rotateZ(90deg); /* Rear Position */
    z-index: 10;
  }
  94% {
    transform: translate3d(0.75em, 0.75em, 0) rotateZ(90deg); /* Rear Position */
    z-index: 10;
  }
  97% {
    transform: translate3d(0.375em, 2.5em, 0) rotateZ(90deg); /* Lower Apex */
    z-index: 10;
  }
  100% {
    transform: translate3d(0, 0, 0) rotateZ(180deg); /* Default */
    z-index: 0;
  }
}

@keyframes blockBasedEditingAnimationTwo {
  0% {
    transform: translate3d(0, 0, 0); /* Default */
    z-index: 0;
  }
  47% {
    transform: translate3d(0, 0, 0); /* Default */
    z-index: 0;
  }
  50% {
    transform: translate3d(-0.375em, 0.5em, 0); /* Apex */
    z-index: 0;
  }
  53% {
    transform: translate3d(-0.75em, -0.75em, 0); /* Rear Position */
    z-index: 0;
  }
  94% {
    transform: translate3d(-0.75em, -0.75em, 0); /* Rear Position */
    z-index: 0;
  }
  97% {
    transform: translate3d(-0.375em, -2em, 0); /* Lower Apex */
    z-index: 0;
  }
}

.blockBasedEditingIcon {
  position: relative;
  display: block;
  margin-bottom: 1.75em;

  span {
    position: relative;
    display: inline-block;
    width: 2.25em;
    height: 2.25em;
    opacity: 0.85;
    background-color: var(--color-primary);
    margin-bottom: 0.75em;
    transform: translate3d(0, 0, 0) rotateZ(90deg);
    animation: blockBasedEditingAnimation infinite 7000ms ease-in-out both;
    animation-delay: 4000ms;

    &:nth-child(2) {
      position: absolute;
      top: 0.75em;
      left: 0.75em;
      width: 2.375em;
      height: 2.375em;
      border-radius: 2em;
      background: rgba(255, 255, 255, 0.9);
      z-index: 10;
      animation: blockBasedEditingAnimationTwo infinite 7000ms ease-in-out both;
      animation-delay: 4000ms;

      &:before {
        content: '';
        display: block;
        position: absolute;
        top: 0;
        left: 0;
        border-radius: 2em;
        width: 100%;
        height: 100%;
        z-index: -1;
        background-color: var(--color-primary);
        opacity: 0.4;
      }
    }
  }
}
